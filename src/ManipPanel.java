import java.util.Observable;
import java.util.Observer;
import jeudilemme.Partie;
import javax.swing.JFileChooser;
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Ciao_hoanG
 */
public class ManipPanel extends javax.swing.JPanel implements Observer {
    private Partie partie;
    
    public ManipPanel() {
        initComponents();
    }
    
    public ManipPanel(Partie partie){
        this.partie = partie;
        partie.addObserver(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jButton1.setFont(new java.awt.Font("Luminari", 0, 13)); // NOI18N
        jButton1.setText("save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Luminari", 0, 13)); // NOI18N
        jButton2.setText("load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Luminari", 0, 13)); // NOI18N
        jButton3.setText("reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, Short.MAX_VALUE)
            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser choix = new JFileChooser();
        choix.setFileSelectionMode(JFileChooser.FILES_ONLY);
        String approve = new String("Enregistrer");
        int resultatEnregistrer = choix.showDialog(choix, approve);
        if(resultatEnregistrer == JFileChooser.APPROVE_OPTION){
            File f = choix.getSelectedFile();
            try {
                /*
                FileOutputStream fos = null;
                try {
                fos = new FileOutputStream(f);
                } catch (FileNotFoundException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                ObjectOutputStream oos = null;
                try {
                oos = new ObjectOutputStream(fos);
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                oos.writeObject(partie);
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                oos.close();
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }*/
                partie.serialiser(f);
            } catch (IOException ex) {
                Logger.getLogger(ManipPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }  
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser choix = new JFileChooser();
        choix.setFileSelectionMode(JFileChooser.FILES_ONLY);
        String approve = new String("Importer");
        int resultatEnregistrer = choix.showDialog(choix, approve);
        if(resultatEnregistrer == JFileChooser.APPROVE_OPTION){
            File f = choix.getSelectedFile();
            try {
                partie.deserialiser(f);
                /*    FileInputStream fileIn = null;
                try {
                fileIn = new FileInputStream(file);
                } catch (FileNotFoundException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                ObjectInputStream in = null;
                try {
                in = new ObjectInputStream(fileIn);
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                partie = (Partie) in.readObject();
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                in.close();
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                fileIn.close();
                } catch (IOException ex) {
                Logger.getLogger(PartieFrame1.class.getName()).log(Level.SEVERE, null, ex);
                }*/
            } catch (IOException ex) {
                Logger.getLogger(ManipPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ManipPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        partie.reinit();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        
    }
}
